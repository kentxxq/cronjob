name: Build and Push Docker Image

on:
  workflow_dispatch:
  schedule:
    # 每2小时执行一次：分钟为0，小时为偶数
    - cron: "0 */2 * * *"
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      # 检出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 登录到DockerHub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: echo file
        run: |
          echo "$(date)" > "$(date +%Y-%m-%d).txt" 
          fallocate -l 2M ./TestMirrorImage/1.txt

      - name: Build and push # 构建并推送
        uses: docker/build-push-action@v4
        with:
          context: ./TestMirrorImage
          push: true
          tags: kentxxq/test-mirror-image:latest

      # 获取镜像 layer 的 sha256 值
      - name: Extract layer sha256 using docker inspect
        id: extract_sha
        run: |
          # 这里示例使用 docker inspect 取出 RootFS.Layers 的第一个（假设只有一个 layer）
          LAYER_SHA=$(docker inspect --format='{{index .RootFS.Layers 0}}' kentxxq/test-mirror-image:latest)
          echo "layer_sha256=$LAYER_SHA" >> $GITHUB_OUTPUT

      # 将获取的 sha256 值写入到仓库中一个文件（如 latest_sha256.txt），便于通过 GitHub API 查询
      - name: Update sha256 file in repository
        run: |
          echo "${{ steps.extract_sha.outputs.layer_sha256 }}" > latest_TestMirrorImage_sha256.txt

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b TestMirrorImage
          git add latest_TestMirrorImage_sha256.txt
          git commit -m "Update Layer 1 SHA256"
          git push origin TestMirrorImage -f
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
